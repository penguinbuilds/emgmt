services:
  db:
    image: postgres:17.5-alpine
    container_name: db
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d emgmt"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: fastapi-app
    container_name: fastapi-app
    ports:
      - 8000:8000
    volumes:
      - .:/emgmt
    depends_on:
      db:
        condition: service_healthy
    
    environment:
      # For DB
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}    

  # app1:
  #   image: fastapi-app-01
  #   container_name: fastapi-app-01
  #   ports:
  #     - 8001:8000
  #   volumes:
  #     - .:/emgmt
  #   depends_on:
  #     db:
  #       condition: service_healthy
    
  #   environment:
  #     # For DB
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # app2:
  #   image: fastapi-app-02
  #   container_name: fastapi-app-02
  #   ports:
  #     - 8002:8000
  #   volumes:
  #     - .:/emgmt
  #   depends_on:
  #     db:
  #       condition: service_healthy
    
  #   environment:
  #     # For DB
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # app3:
  #   image: fastapi-app-03
  #   container_name: fastapi-app-03
  #   ports:
  #     - 8003:8000
  #   volumes:
  #     - .:/emgmt
  #   depends_on:
  #     db:
  #       condition: service_healthy
    
  #   environment:
  #     # For DB
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx_proxy
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   ports:
  #     - "8000:80"
  #   depends_on:
  #     - app1
  #     - app2
  #     - app3
  redis:
    container_name: redis
    image: redis:7.2.5-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 5s
      retries: 5
    
    ports:
      - 6379:6379

  celery_worker:
    container_name: celery_worker
    build: .
    command: celery -A src.emgmt.celery.celery worker --loglevel=info
    volumes:
      - .:/emgmt
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      # - app1
      # - app2
      # - app3
      - redis
    

  flower:
    container_name: flower
    build: .
    command: celery -A src.emgmt.celery.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      # - app1
      # - app2
      # - app3
      - redis
      - celery_worker
    

networks:
  fastapi-app-network:
